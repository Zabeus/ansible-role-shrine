shrine {
  steward {
    //Can be Pending, Approved, or TopcisIgnoredJustLog
    //Pending - new topics start in the Pending state; researchers must wait for the Steward to approve them
    //Approved - new topics start in the Approved state; researchers can use them immediately
    //TopicsIgnoredJustLog - all queries are logged and approved; researchers don't need to create topics
    createTopicsMode = {{ steward_topic_mode }}

    database {
      dataSourceFrom = "JNDI" // Can be JNDI or testDataSource. Use testDataSource for tests, JNDI everywhere else
      jndiDataSourceName = "java:comp/env/jdbc/stewardDB" //leave out for tests
    {% if shrine_db_type == "oracle" %}
      slickProfileClassName = "freeslick.OracleProfile$" // Can be slick.driver.H2Driver$
    {% elif shrine_db_type == "sqlserver" %}
      slickProfileClassName = "freeslick.MSSQLServerProfile$" // Can be slick.driver.H2Driver$
    {% else %}
      slickProfileClassName = "slick.driver.MySQLDriver$" // Can be slick.driver.H2Driver$
    {% endif %}
                                                          //        slick.driver.MySQLDriver$
                                                          //        slick.driver.PostgresDriver$
                                                          //        slick.driver.SQLServerDriver$
                                                          //        slick.driver.JdbcDriver$
                                                          //        com.typesafe.slick.driver.oracle.OracleDriver$
                                                          //
                                                          //        (Yes, with the $ on the end)
                                                          //        Slick 3.0 renamed these from scala.slick.driver.*
                                                          //
                                                          //        Note that SQLServerDriver is not included with Slick by default. 
                                                          //        Either use JdbcDriver, or experiment with the closed-source package at:
                                                          //        http://slick.typesafe.com/doc/2.1.0/extensions.html



    }
  }

  pmEndpoint {
    //URL for the PM Service, used to authenticate users
    url = "{{ ['http://', i2b2_cell.Pmdata.ip, '/i2b2/services/PMService/getServices'] | join }}"
  }

  authenticate {
    usersource {
      domain = "{{ shrine_i2b2_domain }}"
    }
  }

  keystore {
    file = "{{ shrine_keystore.file }}"
    password = "{{ shrine_keystore.pass }}"
    privateKeyAlias = "{{ shrine_keystore.alias }}"
    keyStoreType = "JKS"
    caCertAliases = ["{{ shrine_keystore.caCertAlias }}"] // if part of a network using the CA model, change this according to the network administrator's instructions
  }
} 
